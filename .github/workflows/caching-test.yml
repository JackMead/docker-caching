on:
    push:

jobs:
    build-test:
      # This caches the image but **not** the individual layers, so it can save a pull
      # But doesn't help us speed up the build process
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: docker/setup-buildx-action@v3
        - name: Cache Docker images.
          uses: ScribeMD/docker-cache@0.3.7
          with:
            key: docker-${{ runner.os }}
        - run: docker buildx build --tag my-image .
    build-cache-manual:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Adding required env vars for caching Docker build
          uses: actions/github-script@v7
          env:
            github-token: ${{ secrets.GITHUB_TOKEN }}
          with:
            script: |
              core.exportVariable('ACTIONS_CACHE_URL', process.env['ACTIONS_CACHE_URL'])
              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env['ACTIONS_RUNTIME_TOKEN'])
              core.exportVariable('ACTIONS_RUNTIME_URL', process.env['ACTIONS_RUNTIME_URL'])
        - uses: docker/setup-buildx-action@v3
        - run: docker buildx build --tag my-image --cache-to type=gha,mode=max --cache-from type=gha -o type=image .
    build-with-docker:
      name: Build with Docker
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v3
        - uses: docker/setup-buildx-action@v3
        - uses: docker/build-push-action@v5
          with:
            context: .
            cache-from: type=gha
            cache-to: type=gha,mode=max